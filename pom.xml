<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.4.3</version>
		<relativePath/>
	</parent>

	<groupId>com.jcondotta</groupId>
	<artifactId>account-recipients-system</artifactId>
	<version>1.0.0</version>

    <packaging>pom</packaging>
    <name>account-recipients-system</name>

    <modules>
		<module>account-recipients-domain-service</module>
		<module>account-recipients-application-service</module>
		<module>account-recipients-service</module>
	</modules>

	<properties>
		<java.version>21</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<lombok.version>1.18.38</lombok.version>
		<mapstruct.version>1.6.3</mapstruct.version>

		<software.amazon.awssdk.version>2.33.4</software.amazon.awssdk.version>
		<spring-cloud-aws.version>3.4.0</spring-cloud-aws.version>
		<spring-cloud-dependencies.version>2024.0.1</spring-cloud-dependencies.version>
		<commons-validator.version>1.7</commons-validator.version>
		<commons-codec.version>1.17.1</commons-codec.version>

		<testcontainers.version>1.21.1</testcontainers.version>
		<rest-assured.version>5.5.1</rest-assured.version>

		<micrometer.version>1.15.5</micrometer.version>
		<maven-surefire-plugin.version>3.5.2</maven-surefire-plugin.version>
		<maven-compiler-plugin.version>3.14.0</maven-compiler-plugin.version>
		<jacoco-maven-plugin.version>0.8.13</jacoco-maven-plugin.version>
	</properties>

	<profiles>
		<profile>
			<id>sonar</id>
			<properties>
				<sonar.projectName>account-recipients-system</sonar.projectName>
				<sonar.sources>
					account-recipients-domain-service/src/main/java,
					account-recipients-application-service/src/main/java,
					account-recipients-service/src/main/java
				</sonar.sources>
				<sonar.tests>
					account-recipients-domain-service/src/test/java,
					account-recipients-application-service/src/test/java,
					account-recipients-service/src/test/java
				</sonar.tests>
				<sonar.coverage.jacoco.xmlReportPaths>
					account-recipients-coverage/target/site/jacoco-aggregate/jacoco.xml
				</sonar.coverage.jacoco.xmlReportPaths>
			</properties>
		</profile>
	</profiles>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.jcondotta</groupId>
				<artifactId>account-recipients-domain-service</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>com.jcondotta</groupId>
				<artifactId>account-recipients-application-service</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>software.amazon.awssdk</groupId>
				<artifactId>bom</artifactId>
				<version>${software.amazon.awssdk.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud-dependencies.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>io.awspring.cloud</groupId>
				<artifactId>spring-cloud-aws</artifactId>
				<version>${spring-cloud-aws.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>io.micrometer</groupId>
				<artifactId>micrometer-bom</artifactId>
				<version>${micrometer.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${lombok.version}</version>
				<scope>compileOnly</scope>
			</dependency>

			<dependency>
				<groupId>org.mapstruct</groupId>
				<artifactId>mapstruct</artifactId>
				<version>${mapstruct.version}</version>
			</dependency>

			<dependency>
				<groupId>commons-validator</groupId>
				<artifactId>commons-validator</artifactId>
				<version>${commons-validator.version}</version>
			</dependency>

			<dependency>
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>${commons-codec.version}</version>
			</dependency>

			<dependency>
				<groupId>io.rest-assured</groupId>
				<artifactId>rest-assured</artifactId>
				<version>${rest-assured.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.testcontainers</groupId>
				<artifactId>junit-jupiter</artifactId>
				<version>${testcontainers.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.testcontainers</groupId>
				<artifactId>localstack</artifactId>
				<version>${testcontainers.version}</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
					<configuration>
						<argLine>${argLine}</argLine>
						<reuseForks>true</reuseForks>
						<forkCount>1</forkCount>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${maven-failsafe-plugin.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>integration-test</goal>
								<goal>verify</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<argLine>${argLine}</argLine>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<configuration>
						<release>${java.version}</release>
						<parameters>true</parameters>
						<annotationProcessorPaths>
							<path>
								<groupId>org.mapstruct</groupId>
								<artifactId>mapstruct-processor</artifactId>
								<version>${mapstruct.version}</version>
							</path>
							<path>
								<groupId>org.projectlombok</groupId>
								<artifactId>lombok</artifactId>
								<version>${lombok.version}</version>
							</path>
						</annotationProcessorPaths>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco-maven-plugin.version}</version>
					<executions>
						<execution>
							<id>prepare-agent</id>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>report-aggregate</id>
						<phase>verify</phase>
						<goals>
							<goal>report-aggregate</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/site/jacoco-aggregate</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
