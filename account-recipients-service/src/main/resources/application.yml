server:
  port: 8096

spring:
  application:
    name: account-recipients-service
#  cache:
#    type: redis
#  data:
#    redis:
#      host: ${REDIS_HOST}
#      port: ${REDIS_PORT}

cloud:
  aws:
    region:
      static: ${AWS_DEFAULT_REGION}
    dynamodb:
      tables:
        account-recipients:
          table-name: ${AWS_DYNAMODB_ACCOUNT_RECIPIENTS_TABLE_NAME}

api:
  v1:
    account-recipients:
      root-path: '/api/v1/bank-accounts/{bank-account-id}/account-recipients'
      account-recipient-id-path: '/api/v1/bank-accounts/{bank-account-id}/account-recipients/{account-recipient-id}'

client:
  api:
    bank-accounts:
      base-url: 'http://localhost:8090'

management:
  endpoints:
    web:
      exposure:
        include: health, prometheus, metrics
  metrics:
    tags:
      application: ${spring.application.name}
#      environment: ${ENVIRONMENT:local}
    distribution:
      percentiles-histogram:
        http.server.requests: true
        account_recipients.create: true
        account_recipients.query: true
      percentiles:
        account_recipients.create: 0.5, 0.95, 0.99
        account_recipients.query: 0.5, 0.95, 0.99
        http.server.requests: 0.5, 0.95, 0.99


